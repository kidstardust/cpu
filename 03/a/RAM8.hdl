// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=lR0, b=lR1, c=lR2, d=lR3, e=lR4, f=lR5, g=lR6, h=lR7);
	Register(in=in, load=lR0, out=oR0);
	Register(in=in, load=lR1, out=oR1);
	Register(in=in, load=lR2, out=oR2);
	Register(in=in, load=lR3, out=oR3);
	Register(in=in, load=lR4, out=oR4);
	Register(in=in, load=lR5, out=oR5);
	Register(in=in, load=lR6, out=oR6);
	Register(in=in, load=lR7, out=oR7);
	Mux8Way16(a=oR0, b=oR1, c=oR2, d=oR3, e=oR4, f=oR5, g=oR6, h=oR7, sel=address, out=out);
}